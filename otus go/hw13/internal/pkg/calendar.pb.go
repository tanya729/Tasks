// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.19.0-devel
// 	protoc        v3.11.4
// source: calendar.proto

// protoc -I api/ api/calendar.proto --go_out=plugins=grpc:internal/pkg/

package eventproto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(19 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 19)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title        string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	DateStarted  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=date_started,json=dateStarted,proto3" json:"date_started,omitempty"`
	DateComplete *timestamp.Timestamp `protobuf:"bytes,4,opt,name=date_complete,json=dateComplete,proto3" json:"date_complete,omitempty"`
	Notice       string               `protobuf:"bytes,5,opt,name=notice,proto3" json:"notice,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Event) GetDateStarted() *timestamp.Timestamp {
	if x != nil {
		return x.DateStarted
	}
	return nil
}

func (x *Event) GetDateComplete() *timestamp.Timestamp {
	if x != nil {
		return x.DateComplete
	}
	return nil
}

func (x *Event) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

type EventAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title        string               `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	DateStarted  *timestamp.Timestamp `protobuf:"bytes,2,opt,name=date_started,json=dateStarted,proto3" json:"date_started,omitempty"`
	DateComplete *timestamp.Timestamp `protobuf:"bytes,3,opt,name=date_complete,json=dateComplete,proto3" json:"date_complete,omitempty"`
	Notice       string               `protobuf:"bytes,4,opt,name=notice,proto3" json:"notice,omitempty"`
}

func (x *EventAddRequest) Reset() {
	*x = EventAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventAddRequest) ProtoMessage() {}

func (x *EventAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventAddRequest.ProtoReflect.Descriptor instead.
func (*EventAddRequest) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{1}
}

func (x *EventAddRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EventAddRequest) GetDateStarted() *timestamp.Timestamp {
	if x != nil {
		return x.DateStarted
	}
	return nil
}

func (x *EventAddRequest) GetDateComplete() *timestamp.Timestamp {
	if x != nil {
		return x.DateComplete
	}
	return nil
}

func (x *EventAddRequest) GetNotice() string {
	if x != nil {
		return x.Notice
	}
	return ""
}

type EventAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EventAddResponse) Reset() {
	*x = EventAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventAddResponse) ProtoMessage() {}

func (x *EventAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventAddResponse.ProtoReflect.Descriptor instead.
func (*EventAddResponse) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{2}
}

func (x *EventAddResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type EventEditRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Event *Event `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *EventEditRequest) Reset() {
	*x = EventEditRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventEditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventEditRequest) ProtoMessage() {}

func (x *EventEditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventEditRequest.ProtoReflect.Descriptor instead.
func (*EventEditRequest) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{3}
}

func (x *EventEditRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventEditRequest) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type EventEditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventEditResponse) Reset() {
	*x = EventEditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventEditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventEditResponse) ProtoMessage() {}

func (x *EventEditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventEditResponse.ProtoReflect.Descriptor instead.
func (*EventEditResponse) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{4}
}

type EventDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EventDeleteRequest) Reset() {
	*x = EventDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDeleteRequest) ProtoMessage() {}

func (x *EventDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDeleteRequest.ProtoReflect.Descriptor instead.
func (*EventDeleteRequest) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{5}
}

func (x *EventDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type EventDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventDeleteResponse) Reset() {
	*x = EventDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDeleteResponse) ProtoMessage() {}

func (x *EventDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDeleteResponse.ProtoReflect.Descriptor instead.
func (*EventDeleteResponse) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{6}
}

type EventGetByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EventGetByIdRequest) Reset() {
	*x = EventGetByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventGetByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventGetByIdRequest) ProtoMessage() {}

func (x *EventGetByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventGetByIdRequest.ProtoReflect.Descriptor instead.
func (*EventGetByIdRequest) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{7}
}

func (x *EventGetByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type EventGetByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *EventGetByIdResponse) Reset() {
	*x = EventGetByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventGetByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventGetByIdResponse) ProtoMessage() {}

func (x *EventGetByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventGetByIdResponse.ProtoReflect.Descriptor instead.
func (*EventGetByIdResponse) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{8}
}

func (x *EventGetByIdResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type EventGetAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventGetAllRequest) Reset() {
	*x = EventGetAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventGetAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventGetAllRequest) ProtoMessage() {}

func (x *EventGetAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventGetAllRequest.ProtoReflect.Descriptor instead.
func (*EventGetAllRequest) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{9}
}

type EventGetAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *EventGetAllResponse) Reset() {
	*x = EventGetAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventGetAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventGetAllResponse) ProtoMessage() {}

func (x *EventGetAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventGetAllResponse.ProtoReflect.Descriptor instead.
func (*EventGetAllResponse) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{10}
}

func (x *EventGetAllResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type EventsGetDayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventsGetDayRequest) Reset() {
	*x = EventsGetDayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventsGetDayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsGetDayRequest) ProtoMessage() {}

func (x *EventsGetDayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsGetDayRequest.ProtoReflect.Descriptor instead.
func (*EventsGetDayRequest) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{11}
}

type EventsGetDayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *EventsGetDayResponse) Reset() {
	*x = EventsGetDayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventsGetDayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsGetDayResponse) ProtoMessage() {}

func (x *EventsGetDayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsGetDayResponse.ProtoReflect.Descriptor instead.
func (*EventsGetDayResponse) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{12}
}

func (x *EventsGetDayResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type EventsGetWeekRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventsGetWeekRequest) Reset() {
	*x = EventsGetWeekRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventsGetWeekRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsGetWeekRequest) ProtoMessage() {}

func (x *EventsGetWeekRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsGetWeekRequest.ProtoReflect.Descriptor instead.
func (*EventsGetWeekRequest) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{13}
}

type EventsGetWeekResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *EventsGetWeekResponse) Reset() {
	*x = EventsGetWeekResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventsGetWeekResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsGetWeekResponse) ProtoMessage() {}

func (x *EventsGetWeekResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsGetWeekResponse.ProtoReflect.Descriptor instead.
func (*EventsGetWeekResponse) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{14}
}

func (x *EventsGetWeekResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type EventsGetMonthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventsGetMonthRequest) Reset() {
	*x = EventsGetMonthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventsGetMonthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsGetMonthRequest) ProtoMessage() {}

func (x *EventsGetMonthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsGetMonthRequest.ProtoReflect.Descriptor instead.
func (*EventsGetMonthRequest) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{15}
}

type EventsGetMonthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *EventsGetMonthResponse) Reset() {
	*x = EventsGetMonthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calendar_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventsGetMonthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsGetMonthResponse) ProtoMessage() {}

func (x *EventsGetMonthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsGetMonthResponse.ProtoReflect.Descriptor instead.
func (*EventsGetMonthResponse) Descriptor() ([]byte, []int) {
	return file_calendar_proto_rawDescGZIP(), []int{16}
}

func (x *EventsGetMonthResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

var File_calendar_proto protoreflect.FileDescriptor

var file_calendar_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x01, 0x0a, 0x05, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x22, 0xbf, 0x01, 0x0a, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x22, 0x22, 0x0a, 0x10, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x10, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0x13, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x25, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3d, 0x0a, 0x14, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3c,
	0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x15, 0x0a, 0x13,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x3d, 0x0a, 0x14, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x47, 0x65, 0x74,
	0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x47, 0x65, 0x74, 0x57,
	0x65, 0x65, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x15, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x47, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x3f, 0x0a, 0x16, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x32, 0xb5, 0x04, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x17, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3d, 0x0a, 0x04, 0x45, 0x64, 0x69, 0x74, 0x12, 0x18, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x43, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x06, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x12, 0x1a, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45,
	0x0a, 0x06, 0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x12, 0x1b, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b,
	0x12, 0x1c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x47, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x47, 0x65,
	0x74, 0x57, 0x65, 0x65, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4b, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1d, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x47, 0x65, 0x74, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0e, 0x5a, 0x0c,
	0x2e, 0x3b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_calendar_proto_rawDescOnce sync.Once
	file_calendar_proto_rawDescData = file_calendar_proto_rawDesc
)

func file_calendar_proto_rawDescGZIP() []byte {
	file_calendar_proto_rawDescOnce.Do(func() {
		file_calendar_proto_rawDescData = protoimpl.X.CompressGZIP(file_calendar_proto_rawDescData)
	})
	return file_calendar_proto_rawDescData
}

var file_calendar_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_calendar_proto_goTypes = []interface{}{
	(*Event)(nil),                  // 0: events.Event
	(*EventAddRequest)(nil),        // 1: events.EventAddRequest
	(*EventAddResponse)(nil),       // 2: events.EventAddResponse
	(*EventEditRequest)(nil),       // 3: events.EventEditRequest
	(*EventEditResponse)(nil),      // 4: events.EventEditResponse
	(*EventDeleteRequest)(nil),     // 5: events.EventDeleteRequest
	(*EventDeleteResponse)(nil),    // 6: events.EventDeleteResponse
	(*EventGetByIdRequest)(nil),    // 7: events.EventGetByIdRequest
	(*EventGetByIdResponse)(nil),   // 8: events.EventGetByIdResponse
	(*EventGetAllRequest)(nil),     // 9: events.EventGetAllRequest
	(*EventGetAllResponse)(nil),    // 10: events.EventGetAllResponse
	(*EventsGetDayRequest)(nil),    // 11: events.EventsGetDayRequest
	(*EventsGetDayResponse)(nil),   // 12: events.EventsGetDayResponse
	(*EventsGetWeekRequest)(nil),   // 13: events.EventsGetWeekRequest
	(*EventsGetWeekResponse)(nil),  // 14: events.EventsGetWeekResponse
	(*EventsGetMonthRequest)(nil),  // 15: events.EventsGetMonthRequest
	(*EventsGetMonthResponse)(nil), // 16: events.EventsGetMonthResponse
	(*timestamp.Timestamp)(nil),    // 17: google.protobuf.Timestamp
}
var file_calendar_proto_depIdxs = []int32{
	17, // 0: events.Event.date_started:type_name -> google.protobuf.Timestamp
	17, // 1: events.Event.date_complete:type_name -> google.protobuf.Timestamp
	17, // 2: events.EventAddRequest.date_started:type_name -> google.protobuf.Timestamp
	17, // 3: events.EventAddRequest.date_complete:type_name -> google.protobuf.Timestamp
	0,  // 4: events.EventEditRequest.event:type_name -> events.Event
	0,  // 5: events.EventGetByIdResponse.events:type_name -> events.Event
	0,  // 6: events.EventGetAllResponse.events:type_name -> events.Event
	0,  // 7: events.EventsGetDayResponse.events:type_name -> events.Event
	0,  // 8: events.EventsGetWeekResponse.events:type_name -> events.Event
	0,  // 9: events.EventsGetMonthResponse.events:type_name -> events.Event
	1,  // 10: events.EventService.Add:input_type -> events.EventAddRequest
	3,  // 11: events.EventService.Edit:input_type -> events.EventEditRequest
	5,  // 12: events.EventService.Delete:input_type -> events.EventDeleteRequest
	7,  // 13: events.EventService.Get:input_type -> events.EventGetByIdRequest
	9,  // 14: events.EventService.GetAll:input_type -> events.EventGetAllRequest
	11, // 15: events.EventService.GetDay:input_type -> events.EventsGetDayRequest
	13, // 16: events.EventService.GetWeek:input_type -> events.EventsGetWeekRequest
	15, // 17: events.EventService.GetMonth:input_type -> events.EventsGetMonthRequest
	2,  // 18: events.EventService.Add:output_type -> events.EventAddResponse
	4,  // 19: events.EventService.Edit:output_type -> events.EventEditResponse
	6,  // 20: events.EventService.Delete:output_type -> events.EventDeleteResponse
	8,  // 21: events.EventService.Get:output_type -> events.EventGetByIdResponse
	10, // 22: events.EventService.GetAll:output_type -> events.EventGetAllResponse
	12, // 23: events.EventService.GetDay:output_type -> events.EventsGetDayResponse
	14, // 24: events.EventService.GetWeek:output_type -> events.EventsGetWeekResponse
	16, // 25: events.EventService.GetMonth:output_type -> events.EventsGetMonthResponse
	18, // [18:26] is the sub-list for method output_type
	10, // [10:18] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_calendar_proto_init() }
func file_calendar_proto_init() {
	if File_calendar_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_calendar_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calendar_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calendar_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calendar_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventEditRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calendar_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventEditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calendar_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calendar_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calendar_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventGetByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calendar_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventGetByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calendar_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventGetAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calendar_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventGetAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calendar_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventsGetDayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calendar_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventsGetDayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calendar_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventsGetWeekRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calendar_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventsGetWeekResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calendar_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventsGetMonthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calendar_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventsGetMonthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_calendar_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_calendar_proto_goTypes,
		DependencyIndexes: file_calendar_proto_depIdxs,
		MessageInfos:      file_calendar_proto_msgTypes,
	}.Build()
	File_calendar_proto = out.File
	file_calendar_proto_rawDesc = nil
	file_calendar_proto_goTypes = nil
	file_calendar_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EventServiceClient is the client API for EventService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventServiceClient interface {
	Add(ctx context.Context, in *EventAddRequest, opts ...grpc.CallOption) (*EventAddResponse, error)
	Edit(ctx context.Context, in *EventEditRequest, opts ...grpc.CallOption) (*EventEditResponse, error)
	Delete(ctx context.Context, in *EventDeleteRequest, opts ...grpc.CallOption) (*EventDeleteResponse, error)
	Get(ctx context.Context, in *EventGetByIdRequest, opts ...grpc.CallOption) (*EventGetByIdResponse, error)
	GetAll(ctx context.Context, in *EventGetAllRequest, opts ...grpc.CallOption) (*EventGetAllResponse, error)
	GetDay(ctx context.Context, in *EventsGetDayRequest, opts ...grpc.CallOption) (*EventsGetDayResponse, error)
	GetWeek(ctx context.Context, in *EventsGetWeekRequest, opts ...grpc.CallOption) (*EventsGetWeekResponse, error)
	GetMonth(ctx context.Context, in *EventsGetMonthRequest, opts ...grpc.CallOption) (*EventsGetMonthResponse, error)
}

type eventServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEventServiceClient(cc grpc.ClientConnInterface) EventServiceClient {
	return &eventServiceClient{cc}
}

func (c *eventServiceClient) Add(ctx context.Context, in *EventAddRequest, opts ...grpc.CallOption) (*EventAddResponse, error) {
	out := new(EventAddResponse)
	err := c.cc.Invoke(ctx, "/events.EventService/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) Edit(ctx context.Context, in *EventEditRequest, opts ...grpc.CallOption) (*EventEditResponse, error) {
	out := new(EventEditResponse)
	err := c.cc.Invoke(ctx, "/events.EventService/Edit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) Delete(ctx context.Context, in *EventDeleteRequest, opts ...grpc.CallOption) (*EventDeleteResponse, error) {
	out := new(EventDeleteResponse)
	err := c.cc.Invoke(ctx, "/events.EventService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) Get(ctx context.Context, in *EventGetByIdRequest, opts ...grpc.CallOption) (*EventGetByIdResponse, error) {
	out := new(EventGetByIdResponse)
	err := c.cc.Invoke(ctx, "/events.EventService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) GetAll(ctx context.Context, in *EventGetAllRequest, opts ...grpc.CallOption) (*EventGetAllResponse, error) {
	out := new(EventGetAllResponse)
	err := c.cc.Invoke(ctx, "/events.EventService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) GetDay(ctx context.Context, in *EventsGetDayRequest, opts ...grpc.CallOption) (*EventsGetDayResponse, error) {
	out := new(EventsGetDayResponse)
	err := c.cc.Invoke(ctx, "/events.EventService/GetDay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) GetWeek(ctx context.Context, in *EventsGetWeekRequest, opts ...grpc.CallOption) (*EventsGetWeekResponse, error) {
	out := new(EventsGetWeekResponse)
	err := c.cc.Invoke(ctx, "/events.EventService/GetWeek", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) GetMonth(ctx context.Context, in *EventsGetMonthRequest, opts ...grpc.CallOption) (*EventsGetMonthResponse, error) {
	out := new(EventsGetMonthResponse)
	err := c.cc.Invoke(ctx, "/events.EventService/GetMonth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventServiceServer is the server API for EventService service.
type EventServiceServer interface {
	Add(context.Context, *EventAddRequest) (*EventAddResponse, error)
	Edit(context.Context, *EventEditRequest) (*EventEditResponse, error)
	Delete(context.Context, *EventDeleteRequest) (*EventDeleteResponse, error)
	Get(context.Context, *EventGetByIdRequest) (*EventGetByIdResponse, error)
	GetAll(context.Context, *EventGetAllRequest) (*EventGetAllResponse, error)
	GetDay(context.Context, *EventsGetDayRequest) (*EventsGetDayResponse, error)
	GetWeek(context.Context, *EventsGetWeekRequest) (*EventsGetWeekResponse, error)
	GetMonth(context.Context, *EventsGetMonthRequest) (*EventsGetMonthResponse, error)
}

// UnimplementedEventServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEventServiceServer struct {
}

func (*UnimplementedEventServiceServer) Add(context.Context, *EventAddRequest) (*EventAddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedEventServiceServer) Edit(context.Context, *EventEditRequest) (*EventEditResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Edit not implemented")
}
func (*UnimplementedEventServiceServer) Delete(context.Context, *EventDeleteRequest) (*EventDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedEventServiceServer) Get(context.Context, *EventGetByIdRequest) (*EventGetByIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedEventServiceServer) GetAll(context.Context, *EventGetAllRequest) (*EventGetAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedEventServiceServer) GetDay(context.Context, *EventsGetDayRequest) (*EventsGetDayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDay not implemented")
}
func (*UnimplementedEventServiceServer) GetWeek(context.Context, *EventsGetWeekRequest) (*EventsGetWeekResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWeek not implemented")
}
func (*UnimplementedEventServiceServer) GetMonth(context.Context, *EventsGetMonthRequest) (*EventsGetMonthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMonth not implemented")
}

func RegisterEventServiceServer(s *grpc.Server, srv EventServiceServer) {
	s.RegisterService(&_EventService_serviceDesc, srv)
}

func _EventService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/events.EventService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).Add(ctx, req.(*EventAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_Edit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventEditRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).Edit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/events.EventService/Edit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).Edit(ctx, req.(*EventEditRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/events.EventService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).Delete(ctx, req.(*EventDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventGetByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/events.EventService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).Get(ctx, req.(*EventGetByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventGetAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/events.EventService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).GetAll(ctx, req.(*EventGetAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_GetDay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventsGetDayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).GetDay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/events.EventService/GetDay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).GetDay(ctx, req.(*EventsGetDayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_GetWeek_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventsGetWeekRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).GetWeek(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/events.EventService/GetWeek",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).GetWeek(ctx, req.(*EventsGetWeekRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_GetMonth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventsGetMonthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).GetMonth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/events.EventService/GetMonth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).GetMonth(ctx, req.(*EventsGetMonthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "events.EventService",
	HandlerType: (*EventServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _EventService_Add_Handler,
		},
		{
			MethodName: "Edit",
			Handler:    _EventService_Edit_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _EventService_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _EventService_Get_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _EventService_GetAll_Handler,
		},
		{
			MethodName: "GetDay",
			Handler:    _EventService_GetDay_Handler,
		},
		{
			MethodName: "GetWeek",
			Handler:    _EventService_GetWeek_Handler,
		},
		{
			MethodName: "GetMonth",
			Handler:    _EventService_GetMonth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calendar.proto",
}
